[{"name":"app.R","content":"library(shiny)\r\nlibrary(leaflet)\r\nlibrary(plotly)\r\nlibrary(tidyverse)\r\nlibrary(spData)\r\nlibrary(sf)\r\n\r\ndata(world)\r\nworld <- st_as_sf(world)\r\n\r\npath <- file.path(\"../shinylive_1/data\", \"wpp_2022.rds\")\r\nwpp_2022 <- read_rds(path)\r\n\r\nmy_wpp <- wpp_2022 |> \r\n  filter(year == 2024)\r\n\r\nworld_data <- world |>\r\n  left_join(my_wpp, join_by(iso_a2 == ISO2))\r\n\r\n\r\n# Define your ui and server code here\r\nui <- fluidPage(\r\n  titlePanel(\"World Population Prospects\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"continent\", \"Select a Continent:\",\r\n                  choices = c(unique(world_data$continent),\r\n                              unique(world_data$subregion)),\r\n                  selected = \"Asia\")\r\n    ),\r\n    \r\n    mainPanel(\r\n      plotOutput(\"continentMap\")\r\n    )\r\n  )\r\n)\r\n\r\n\r\n# Define server logic\r\nserver <- function(input, output) {\r\n  \r\n  # Filter data based on selected continent\r\n  continentData <- reactive({\r\n    world_data |> \r\n      filter((continent == input$continent) |\r\n               (subregion == input$continent))\r\n  })\r\n  \r\n  \r\n  # Generate the map output\r\n  output$continentMap <- renderPlot({\r\n    ggplot(data = continentData()) +\r\n      geom_sf(aes(fill = TFR)) +\r\n      coord_sf(crs = \"+proj=robin\") +\r\n      scale_fill_viridis_c() +\r\n      scale_x_continuous(breaks = seq(-180, 180, 30)) +\r\n      scale_y_continuous(breaks = c(-89.5, seq(-60, 60, 30), 89.5)) +\r\n      theme(\r\n        panel.background = element_rect(\"white\"),\r\n        panel.grid = element_line(color = \"gray80\")\r\n      )\r\n  })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)","type":"text"}]

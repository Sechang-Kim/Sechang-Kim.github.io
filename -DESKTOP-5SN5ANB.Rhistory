install.packages("GWalkR")
library(gwalkR)
library(GWalkR)
library(GWalkR)
data("iris")
gwalkr(iris)
attitude.pre <- c(4, 3.666666667, 3.5, 5, 5, 5, 4, 4.666666667, 4.166666667, 5, 4.333333333,
4.333333333, 4.5, 4.166666667, 4.333333333, 4, 4)
attitude.post <- c(4, 5, 3.833333333, 5, 5, 5, 4.166666667, 4.666666667, 4.166666667, 5,
4.666666667, 4.833333333, 4.666666667, 4.166666667, 4.5, 4.333333333, 4.5)
ks.test(attitude.pre, "pnorm", mean=mean(attitude.pre), sd = sd(attitude.pre))
shapiro.test(attitude.pre, "pnorm", mean=mean(attitude.pre), sd = sd(attitude.pre))
shapiro.test(attitude.pre
shapiro.test(attitude.pre)
shapiro.test(attitude.pre)
shapiro.test(attitude.post)
attitude <- attitude.pre - attitude.post
shapiro.test(attitude)
ks.test(attitude)
ks.test(attitude, pnorm)
efficacy.post <- c(3.833333333, 5, 4.5, 4.666666667, 4.5, 4.833333333, 4.166666667, 4, 4, 5, 4,
4.5, 2.5, 4, 4.333333333, 4.166666667, 4.5)
efficacy.pre <- c(3.666666667, 3.166666667, 3.666666667, 3.833333333, 3.166666667, 4.166666667,
4.5, 3.833333333, 4, 3.833333333, 2.833333333, 4.166666667, 2.333333333, 3,
3, 4.333333333, 3.166666667)
# 정규성 만족 ?
efficacy <- efficacy.pre - efficacy.post
shapiro.test(efficacy)
literacy.pre <- c(3.5, 3.1, 3.7, 3.5, ,2.5 ,3.2 , 4, 3.2, 3.5, 4, 2.4, 3.1, 3.1, 2.7, 2.6,
2.5, 3.2)
literacy.post <- c(4, 5, 4.3, 4.7, 4.2, 4.7, 4.8, 4, 4.1, 5, 4.1, 3.4, 3.2, 4.2, 4.2, 4.6, 4.5)
literacy <- literacy.pre - literacy.post
literacy.pre <- c(3.5, 3.1, 3.7, 3.5, ,2.5 ,3.2 , 4, 3.2, 3.5, 4, 2.4, 3.1, 3.1, 2.7, 2.6,
2.5, 3.2)
literacy.post <- c(4, 5, 4.3, 4.7, 4.2, 4.7, 4.8, 4, 4.1, 5, 4.1, 3.4, 3.2, 4.2, 4.2, 4.6, 4.5)
literacy.pre <- c(3.5, 3.1, 3.7, 3.5, 2.5, 3.2, 4, 3.2, 3.5, 4, 2.4, 3.1, 3.1, 2.7, 2.6,
2.5, 3.2)
literacy.post <- c(4, 5, 4.3, 4.7, 4.2, 4.7, 4.8, 4, 4.1, 5, 4.1, 3.4, 3.2, 4.2, 4.2, 4.6, 4.5)
literacy <- literacy.pre - literacy.post
# 정규성 만족?
shapiro.test(literacy)
competency.pre <- c(3.923076923, 2.615384615, 3, 2.923076923, 2.307692308, 3.076923077,
3.846153846, 3.307692308, 3.692307692, 4, 2.923076923, 3.923076923,
1.384615385, 1.461538462, 1.846153846, 2, 2.153846154)
competency.post <- c(4, 5, 3.923076923, 5, 4.307692308, 4.846153846, 4.538461538,
4.153846154, 3.769230769, 5, 4.153846154, 3.923076923, 1.615384615,
4.153846154, 4, 4, 4)
competency <- competency.pre - competency.post
# 정규성 만족?
shapiro.test(competency)
attitude.pre <- c(4, 3.666666667, 3.5, 5, 5, 5, 4, 4.666666667, 4.166666667, 5, 4.333333333,
4.333333333, 4.5, 4.166666667, 4.333333333, 4, 4)
attitude.post <- c(4, 5, 3.833333333, 5, 5, 5, 4.166666667, 4.666666667, 4.166666667, 5,
4.666666667, 4.833333333, 4.666666667, 4.166666667, 4.5, 4.333333333, 4.5)
# 정규성 만족 X
attitude <- attitude.pre - attitude.post
shapiro.test(attitude) # 만족 안함
result <- wilcox.test(attitude.pre, attitude.post, paired = TRUE)
print(result)
result <- wilcox.test(attitude.pre+0.1, attitude.post+0.1, paired = TRUE)
print(result)
t.test(efficacy.pre, efficacy.post, paired = TRUE)
mean(efficacy)/sd(efficacy)
mean(literacy)/sd(literacy)
mean(attitude)/sd(attitude)
install.packages("effsize")
library(effsize)
cohen.d(literacy.pre, literacy.post, paired = TRUE)
cohen.d(competency.pre, competency.post, paired = TRUE)
cohen.d(efficacy.pre, efficacy.post, paired = TRUE)
cohen.d(attitude.pre, attitude.post, paired = TRUE)
install.packages("rstatix")
library(effsize);library(rstatix)
wilcox_effsize(attitude.pre, attitude.post, paired = TRUE)
wilcox_effsize(data.frame(attitude.pre, attitude.post),
attitude.pre~attitude.post,
paired = TRUE)
data.frame(attitude.pre, attitude.post)
Dataset <- data.frame(score = c(45 ,85, 66, 78, 92, 94, 91, 85, 62, 60,
40, 56, 70, 80, 90, 88, 95, 90, 45, 55,
84, 88, 88, 90, 92, 93, 91, 85, 80, 73,
97, 100, 93, 91, 90, 87, 94, 83, 92, 93),
condition = c(rep('condition1', 20), rep('condition2', 20)))
View(Dataset)
library(effsize);library(rstatix);library(tidyverse)
data.frame(attitude.pre, attitude.post) |>
pivot_longer(
names_to = "group",
values_to = "value"
)
attitude.df <- data.frame(attitude.pre, attitude.post)
attitdue.df$ID <- c(1:17)
attitude.df$ID <- c(1:17)
View(attitude.df)
data.frame(attitude.pre, attitude.post) |>
pivot_longer(
cols = ID,
names_to = "group",
values_to = "value"
)
attitude.df |>
pivot_longer(
cols = ID,
names_to = "group",
values_to = "value"
)
attitude.df |>
pivot_longer(
cols = c(attitude.pre, attitude.post),
names_to = "group",
values_to = "value"
)
attitude.df <- attitude.df |>
pivot_longer(
cols = c(attitude.pre, attitude.post),
names_to = "group",
values_to = "value"
)
wilcox_effsize(attitude.df,
attitude.pre~attitude.post,
paired = TRUE)
View(Dataset)
View(attitude.df)
wilcox_effsize(attitude.df,
value~group,
paired = TRUE)
install.packages("coin")
wilcox_effsize(attitude.df,
value~group,
paired = TRUE)
result <- wilcox.test(attitude.pre, attitude.post, paired = TRUE)
print(result)
wilcox_effsize(attitude.df,
value~group,
paired = TRUE)
shapiro.test(efficacy) # 정규성 만족
cohen.d(efficacy.pre, efficacy.post, paired = TRUE)
result <- wilcox.test(attitude.pre, attitude.post, paired = TRUE)
print(result)
cohen.d(literacy.pre, literacy.post, paired = TRUE)
shapiro.test(efficacy) # 정규성 만족
# 정규성 만족?
shapiro.test(literacy)
cohen.d(literacy.pre, literacy.post, paired = TRUE)
# 정규성 만족?
shapiro.test(competency)
cohen.d(competency.pre, competency.post, paired = TRUE)
View(result)
result <- wilcox.test(attitude.pre-attitude.post, exact = FALSE)
print(result)
?wilcox.test
attitude
summary(result)
result <- wilcox.test(attitude.pre-attitude.post, alternative = "one.sided",exact = FALSE)
result <- wilcox.test(attitude.pre-attitude.post, alternative = "less", exact = FALSE)
print(result)
# Manual Test
attitude.rank <- rank(abs(attitude))
attitude.rank.sign <- attitude.rank*sign(attitude)
ranks.pos <- sum(attitude.rank.sign[attitude.rank.sign > 0])
ranks.neg <- -sum(attitude.rank.sign[attitude.rank.sign < 0])
ranks.pos
ranks.neg
# 정규성 만족 X
attitude <- attitude.post-attitude.pre
shapiro.test(attitude) # 만족 안함
# Manual Test
attitude.rank <- rank(abs(attitude))
attitude.rank.sign <- attitude.rank*sign(attitude)
ranks.pos <- sum(attitude.rank.sign[attitude.rank.sign > 0])
ranks.neg <- -sum(attitude.rank.sign[attitude.rank.sign < 0])
ranks.pos
ranks.neg
library(effsize);library(rstatix);library(tidyverse)
attitude.pre <- c(4, 3.666666667, 3.5, 5, 5, 5, 4, 4.666666667, 4.166666667, 5, 4.333333333,
4.333333333, 4.5, 4.166666667, 4.333333333, 4, 4)
attitude.post <- c(4, 5, 3.833333333, 5, 5, 5, 4.166666667, 4.666666667, 4.166666667, 5,
4.666666667, 4.833333333, 4.666666667, 4.166666667, 4.5, 4.333333333, 4.5)
# 정규성 만족 X
attitude <- attitude.post-attitude.pre
shapiro.test(attitude) # 만족 안함
result <- wilcox.test(attitude.post-attitude.pre, alternative = "greater", exact = FALSE)
print(result)
shapiro.test(efficacy) # 정규성 만족
attitude.df <- data.frame(attitude.pre, attitude.post)
attitude.df$ID <- c(1:17)
attitude.df <- attitude.df |>
pivot_longer(
cols = c(attitude.pre, attitude.post),
names_to = "group",
values_to = "value"
)
wilcox_effsize(attitude.df,
value~group,
paired = TRUE)
efficacy.pre <- c(3.666666667, 3.166666667, 3.666666667, 3.833333333, 3.166666667, 4.166666667,
4.5, 3.833333333, 4, 3.833333333, 2.833333333, 4.166666667, 2.333333333, 3,
3, 4.333333333, 3.166666667)
efficacy.post <- c(3.833333333, 5, 4.5, 4.666666667, 4.5, 4.833333333, 4.166666667, 4, 4, 5, 4,
4.5, 2.5, 4, 4.333333333, 4.166666667, 4.5)
# 정규성 만족 ?
efficacy <- efficacy.post - efficacy.pre
shapiro.test(efficacy) # 정규성 만족
cohen.d(efficacy.pre, efficacy.post, paired = TRUE)
literacy.pre <- c(3.5, 3.1, 3.7, 3.5, 2.5, 3.2, 4, 3.2, 3.5, 4, 2.4, 3.1, 3.1, 2.7, 2.6,
2.5, 3.2)
literacy.post <- c(4, 5, 4.3, 4.7, 4.2, 4.7, 4.8, 4, 4.1, 5, 4.1, 3.4, 3.2, 4.2, 4.2, 4.6, 4.5)
literacy <- literacy.post - literacy.pre
# 정규성 만족?
shapiro.test(literacy)
cohen.d(literacy.pre, literacy.post, paired = TRUE)
competency.pre <- c(3.923076923, 2.615384615, 3, 2.923076923, 2.307692308, 3.076923077,
3.846153846, 3.307692308, 3.692307692, 4, 2.923076923, 3.923076923,
1.384615385, 1.461538462, 1.846153846, 2, 2.153846154)
competency.post <- c(4, 5, 3.923076923, 5, 4.307692308, 4.846153846, 4.538461538,
4.153846154, 3.769230769, 5, 4.153846154, 3.923076923, 1.615384615,
4.153846154, 4, 4, 4)
competency <- competency.post - competency.pre
# 정규성 만족?
shapiro.test(competency)
cohen.d(competency.pre, competency.post, paired = TRUE)
attitude
summary(result)
# Manual Test
attitude.rank <- rank(abs(attitude))
attitude.rank.sign <- attitude.rank*sign(attitude)
ranks.pos <- sum(attitude.rank.sign[attitude.rank.sign > 0])
ranks.neg <- -sum(attitude.rank.sign[attitude.rank.sign < 0])
ranks.pos
ranks.neg
wilcox.test(attitude, alternative = "greater", exact = FALSE)
wilcox.test(attitude, alternative = "greater", exact = TRUE)
wilcox.test(attitude, alternative = "two.sided", exact = FALSE)
cohen.d(efficacy.pre, efficacy.post, paired = TRUE)
t.test(efficay, paired = TRUE)
t.test(efficacy, paired = TRUE)
t.test(efficacy.post, efficacy.pre, paired = TRUE)
t.test(literacy.post, literacy.pre, paired = TRUE)
cohen.d(literacy.post, literacy.pre, paired = TRUE)
t.test(competency.post, competency.pre, paired = TRUE)
wilcox_effsize(attitude.df,
value~group,
paired = TRUE)
cohen.d(efficacy.post, efficacy.pre, paired = TRUE)
cohen.d(efficacy.post, efficacy.pre, paired = TRUE)
t.test(efficacy.post, efficacy.pre, paired = TRUE)
cohen.d(efficacy.post, efficacy.pre, paired = TRUE)
efficacy.pre <- c(3.666666667, 3.166666667, 3.666666667, 3.833333333, 3.166666667, 4.166666667,
4.5, 3.833333333, 4, 3.833333333, 2.833333333, 4.166666667, 2.333333333, 3,
3, 4.333333333, 3.166666667)
efficacy.post <- c(3.833333333, 5, 4.5, 4.666666667, 4.5, 4.833333333, 4.166666667, 4, 4, 5, 4,
4.5, 2.5, 4, 4.333333333, 4.166666667, 4.5)
# 정규성 만족 ?
efficacy <- efficacy.post - efficacy.pre
shapiro.test(efficacy) # 정규성 만족
cohen.d(efficacy.post, efficacy.pre, paired = TRUE)
literacy.pre <- c(3.5, 3.1, 3.7, 3.5, 2.5, 3.2, 4, 3.2, 3.5, 4, 2.4, 3.1, 3.1, 2.7, 2.6,
2.5, 3.2)
literacy.post <- c(4, 5, 4.3, 4.7, 4.2, 4.7, 4.8, 4, 4.1, 5, 4.1, 3.4, 3.2, 4.2, 4.2, 4.6, 4.5)
literacy <- literacy.post - literacy.pre
# 정규성 만족?
shapiro.test(literacy)
t.test(literacy.post, literacy.pre, paired = TRUE)
cohen.d(literacy.post, literacy.pre, paired = TRUE)
cohen.d(competency.pre, competency.post, paired = TRUE)
cohen.d(competency.post, competency.pre, paired = TRUE)
t.test(competency.post, competency.pre, paired = TRUE)
install.packages("shinylive")
shiny::runApp()
test <- data(world)
library(sf)
test <- data(world)
library(spData)
test <- data(world)
data(world)
force(world)
spData::data(world)
sf::data(world)
mtcars
world
test <- world
View(test)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(world)
worldData <- world
world <- st_as_sf(worldData)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("profvis")
library(profvis)
library(ggplot2)
profvis({
library(ggplot2)
})
profvis({
library(dplyr)
library(shiny)
library(readr)
library(bslib)
library(echarts4r)
path <- file.path("data", "wpp_2022.rds")
data <- read_rds(path) |>
mutate(pop_jan_total = pop_jan_total*1000)
# Define your UI
ui <- page_sidebar(
# Apply a custom theme using Bootstrap 5
theme = bs_theme(version = 5, bootswatch = "minty"),
# Sidebar content with select input
sidebar = sidebar(
width = 300,  # Set custom width for the sidebar
div(
h3("Country Selector"),
selectInput("country", "Select one or more countries:",
choices = unique(data$ISO3),
selected = "KOR",
multiple = TRUE)  # Enable multiple selection
)
),
# Main panel with plot output using echarts4r
div(
# Title and data source
titlePanel(
title = tagList(
tags$div("World Population Prospects", style = "font-size: 24px;"),  # Main title
tags$div("Data Source: World Population Prospects 2022, UN", style = "font-size: 14px; color: gray;")  # Subtitle below
)
),
# Output for population trend plot using echarts4r
echarts4rOutput("popTrend", height = "500px")
)
)
# Define server logic
server <- function(input, output) {
# Filter data based on selected countries
countryData <- reactive({
data |>
filter(ISO3 %in% input$country)  # Filter based on selected countries
})
# Generate the population trend plot using echarts4r
output$popTrend <- renderEcharts4r({
filtered_data <- countryData()
if (nrow(filtered_data) == 0) {
return(NULL)  # Don't plot if no data is selected
}
# Get the range of years from the data
min_year <- min(filtered_data$year, na.rm = TRUE)
max_year <- max(filtered_data$year, na.rm = TRUE)
# Plot using echarts4r
filtered_data |>
group_by(ISO3) |>
e_charts(year) |>
e_line(serie = pop_jan_total, symbolSize = 2, bind = region_name) |>
e_tooltip(formatter = htmlwidgets::JS("
function(params) {
return '<strong>' + params.name + '</strong>' + '<br>' +
'Year: ' + params.value[0] + '<br>' +
'Total Population: ' + params.value[1].toLocaleString();
}
")) |>
e_title("Population Trend by Country") |>
e_legend(show = TRUE, bottom = 0) |>
e_x_axis(name = "Year", min = min_year, max = max_year) |>
e_y_axis(name = "Population") |>
e_theme("minty")  # Apply 'minty' theme for consistent look
})
}
# Run the application
shinyApp(ui = ui, server = server)
})
